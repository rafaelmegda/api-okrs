// <auto-generated />
using System;
using Cadastro_taxas.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cadastro_taxas.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210404173402_okr")]
    partial class okr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Cadastro_taxas.API.Model.ControleDeOKR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmpresasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmpresasId");

                    b.ToTable("CONTROLE_OKRS");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropostaValor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EMPRESAS");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.Objetivo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ControleDeOKRId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefinicaoObjetivo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanejamentoMetasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("ControleDeOKRId");

                    b.HasIndex("PlanejamentoMetasId");

                    b.ToTable("OBJETIVOS");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.PlanejamentoMetaObjetivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<double>("Porcentagem")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PLANEJAMENTO_METAS_DOS_OBJETIVOS");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.ResultadoChave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoResultadoChave")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Objetivoid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reponsavel")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Objetivoid");

                    b.ToTable("RESULTADO_CHAVE");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.ResultadoChaveAtividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoAtividade")
                        .HasColumnType("TEXT");

                    b.Property<int>("PesoDaAtividade")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResultadoChaveId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalConcluidoDaAtividade")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ResultadoChaveId");

                    b.ToTable("RESULTADO_CHAVE_ATIVIDADE");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.ControleDeOKR", b =>
                {
                    b.HasOne("Cadastro_taxas.API.Model.Empresa", "Empresas")
                        .WithMany()
                        .HasForeignKey("EmpresasId");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.Objetivo", b =>
                {
                    b.HasOne("Cadastro_taxas.API.Model.ControleDeOKR", null)
                        .WithMany("Objetivos")
                        .HasForeignKey("ControleDeOKRId");

                    b.HasOne("Cadastro_taxas.API.Model.PlanejamentoMetaObjetivos", "PlanejamentoMetas")
                        .WithMany()
                        .HasForeignKey("PlanejamentoMetasId");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.ResultadoChave", b =>
                {
                    b.HasOne("Cadastro_taxas.API.Model.Objetivo", null)
                        .WithMany("ResultadosChaves")
                        .HasForeignKey("Objetivoid");
                });

            modelBuilder.Entity("Cadastro_taxas.API.Model.ResultadoChaveAtividade", b =>
                {
                    b.HasOne("Cadastro_taxas.API.Model.ResultadoChave", null)
                        .WithMany("AtividadesResultadoChave")
                        .HasForeignKey("ResultadoChaveId");
                });
#pragma warning restore 612, 618
        }
    }
}
